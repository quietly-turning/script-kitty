Exercise.create( question: "Let's write a simple query.  Find all the available information about all the schools.", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/2\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/1/edit\">try again</a>?", answer: "* from schools select ", description: "Learn about databases and tables.  Write your first query!", lesson: "")

Exercise.create( question: "Find all available information about schools where the city is <em>Athens</em>.", answer: "* = athens city from schools select where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/3\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/2/edit\">try again</a>?", description: "Learn how to limit your query results with <em>where clauses</em>.", lesson: "")

Exercise.create( question: "Find all available information about schools where the chief's name contains the text <em>stan</em>.", answer: "%stan% * chief from schools like select where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/4\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/3/edit\">try again</a>?", description: "Learn how to search for segments of text with the <em>like</em> operator.", lesson: "")

Exercise.create( question: "Find all available information about schools where the chief's name contains the text <em>laura</em> or the chief's name contains the text <em>carroll</em>.", answer: "%carroll% %laura% * chief chief from schools like like or select where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/5\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/4/edit\">try again</a>?", description: "Learn how to write queries with more than one <em>where clause</em> using an <em>or</em> operator.", lesson: "")

Exercise.create( question: "Find all available information about schools where the chief's name contains the text <em>laura</em> and the chief's name <strong>also</strong> contains the text <em>carroll</em>.", answer: "%carroll% %laura% * and chief chief from schools like like select where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/6\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/5/edit\">try again</a>?", description: "Learn how to write queries with more than one <em>where clause</em> using an <em>and</em> operator.", lesson: "")

Exercise.create( question: "Find all available information about schools from the city of <em>Houston</em> that are not in the state <em>TX</em>.", answer: "!= * = and city from houston schools select state tx where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/7\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/6/edit\">try again</a>?", description: "Learn how to filter results by inequality using the <em>does not equal</em> operator.", lesson: "")

Exercise.create( question: "Find the name, city, and state of the schools in which the chief's name contains the text <em>victor</em>.", answer: "%victor% chief city, from schools like name, select state where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/8\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/7/edit\">try again</a>?", description: "Learn how to return specific columns from the table you are querying.", lesson: "")

Exercise.create( question: "Find the name, city, and state of schools from the state of <em>NY</em> in which the name of the school contains the text <em>medical</em>.", answer: "%medical% = and city, from schools like name name, ny select state state where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/9\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/8/edit\">try again</a>?", description: "Get extra practice returning only specific columns from the table you are querying.", lesson: "")

Exercise.create( question: "Find the school name and the name of its locale schools whose name contains the text <em>Penn State</em>.", answer: "%penn = and from schools, schools.locale_id schools.name schools.name, schools.state, like locales locales.id locales.name select state% where ", response_correct: "Purrrrfect!  You're getting the hang of it now.  Try the <a class=\"message-anchor\" href=\"/exercises/10\">next exercise</a>!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/9/edit\">try again</a>?", description: "Write a complex query that pulls data from multiple tables.  Learn how to avoid <em>cartesian products</em>.", lesson: "")

Exercise.create( question: "Find the school name and state and the name of its control for schools whose city is <em>Sterling</em>.", answer: "= = and controls controls.id controls.name from schools, schools.city schools.control_id schools.name, schools.state, select sterling where ", response_correct: "Purrrrfect!  You're all done!", response_incorrect: "Hmm.  The query you wrote ran successfully, but it didn't find the information I was looking for.  Would you like to <a class=\"message-anchor\" href=\"/exercises/10/edit\">try again</a>?", description: "Write another complex query that pulls data from multiple tables.", lesson: "")
